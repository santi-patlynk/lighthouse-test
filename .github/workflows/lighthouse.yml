name: Lighthouse (by URL)

on:
  workflow_dispatch:
    inputs:
      url:
        description: "Full URL to audit (e.g. https://yourdomain.com/)"
        required: true
        type: string
      runs:
        description: "Number of runs per form factor (median is used)"
        required: false
        default: "3"
        type: string

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Lighthouse CI CLI
        run: npm i -g @lhci/cli@0.14.x

      - name: Prepare output directory
        run: mkdir -p lhci_reports

      # ===== Desktop =====
      - name: Collect (desktop) – HTML + JSON
        run: |
          set -euo pipefail
          lhci collect \
            --url="${{ inputs.url }}" \
            --numberOfRuns=${{ inputs.runs }} \
            --settings.preset=desktop \
            --output html --output json \
            --output-path=./lhci_reports/desktop.report.html \
            --json=./lhci_reports/desktop.lhr.json

      - name: Upload to temp public storage (desktop)
        id: upload_desktop
        run: |
          set -euo pipefail
          OUT="$(lhci upload --target=temporary-public-storage --json=./lhci_reports/desktop.lhr.json || true)"
          echo "$OUT"
          # Extract the last URL LHCI prints (if available)
          URL="$(echo "$OUT" | grep -Eo 'https?://[^ ]+' | tail -n1 || true)"
          echo "REPORT_URL=$URL" >> "$GITHUB_OUTPUT"

      # ===== Mobile =====
      - name: Collect (mobile) – HTML + JSON
        run: |
          set -euo pipefail
          lhci collect \
            --url="${{ inputs.url }}" \
            --numberOfRuns=${{ inputs.runs }} \
            --settings.emulatedFormFactor=mobile \
            --settings.throttlingMethod=simulate \
            --output html --output json \
            --output-path=./lhci_reports/mobile.report.html \
            --json=./lhci_reports/mobile.lhr.json

      - name: Upload to temp public storage (mobile)
        id: upload_mobile
        run: |
          set -euo pipefail
          OUT="$(lhci upload --target=temporary-public-storage --json=./lhci_reports/mobile.lhr.json || true)"
          echo "$OUT"
          URL="$(echo "$OUT" | grep -Eo 'https?://[^ ]+' | tail -n1 || true)"
          echo "REPORT_URL=$URL" >> "$GITHUB_OUTPUT"

      # (Optional) Assert thresholds — tune or remove || true to fail the build on low scores
      - name: Assert thresholds
        run: |
          set -euo pipefail
          lhci assert --assertions.preset "lighthouse:recommended" \
            --assertions.categories:performance=warn \
            --assertions.categories:accessibility=warn \
            --assertions.categories:'best-practices'=warn \
            --assertions.categories:seo=warn || true

      - name: Upload artifacts (HTML + JSON)
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: lhci_reports
          retention-days: 7

      - name: Summary
        run: |
          {
            echo "## Lighthouse reports"
            echo ""
            echo "- **URL:** ${{ inputs.url }}"
            if [ -n "${{ steps.upload_desktop.outputs.REPORT_URL }}" ]; then
              echo "- **Desktop report (public link):** ${{ steps.upload_desktop.outputs.REPORT_URL }}"
            else
              echo "- **Desktop report (HTML artifact):** \`lhci_reports/desktop.report.html\`"
            fi
            if [ -n "${{ steps.upload_mobile.outputs.REPORT_URL }}" ]; then
              echo "- **Mobile report (public link):** ${{ steps.upload_mobile.outputs.REPORT_URL }}"
            else
              echo "- **Mobile report (HTML artifact):** \`lhci_reports/mobile.report.html\`"
            fi
            echo ""
            echo "Download the **lighthouse-reports** artifact to view the HTML files if public links are missing."
          } >> "$GITHUB_STEP_SUMMARY"